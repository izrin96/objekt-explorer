/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ContainerRouteImport } from './routes/_container'
import { Route as ContainerIndexRouteImport } from './routes/_container/index'
import { Route as ApiOpenAppRouteImport } from './routes/api/open-app'
import { Route as ApiLiveSessionsRouteImport } from './routes/api/live-sessions'
import { Route as ApiCollectionRouteImport } from './routes/api/collection'
import { Route as ApiActivityRouteImport } from './routes/api/activity'
import { Route as ContainerTermsPrivacyRouteImport } from './routes/_container/terms-privacy'
import { Route as ContainerLoginRouteImport } from './routes/_container/login'
import { Route as profileAtChar123nicknameChar125RouteImport } from './routes/(profile)/@{$nickname}'
import { Route as ContainerLiveIndexRouteImport } from './routes/_container/live/index'
import { Route as ContainerListIndexRouteImport } from './routes/_container/list/index'
import { Route as ContainerActivityIndexRouteImport } from './routes/_container/activity/index'
import { Route as profileAtChar123nicknameChar125IndexRouteImport } from './routes/(profile)/@{$nickname}.index'
import { Route as ApiUserSearchRouteImport } from './routes/api/user/search'
import { Route as ApiTransfersAddressRouteImport } from './routes/api/transfers/$address'
import { Route as ApiRpcSplatRouteImport } from './routes/api/rpc.$'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as ContainerLiveIdRouteImport } from './routes/_container/live/$id'
import { Route as ContainerListSlugRouteImport } from './routes/_container/list/$slug'
import { Route as ContainerAuthResetPasswordRouteImport } from './routes/_container/auth/reset-password'
import { Route as ContainerlinkLinkRouteImport } from './routes/_container/(link)/link'
import { Route as profileAtChar123nicknameChar125TradesRouteImport } from './routes/(profile)/@{$nickname}.trades'
import { Route as profileAtChar123nicknameChar125StatsRouteImport } from './routes/(profile)/@{$nickname}.stats'
import { Route as profileAtChar123nicknameChar125ProgressRouteImport } from './routes/(profile)/@{$nickname}.progress'
import { Route as ContainerlinkLinkIndexRouteImport } from './routes/_container/(link)/link/index'
import { Route as ApiObjektsOwnedByAddressRouteImport } from './routes/api/objekts/owned-by/$address'
import { Route as ApiObjektsMetadataCollectionSlugRouteImport } from './routes/api/objekts/metadata/$collectionSlug'
import { Route as ApiObjektsListCollectionSlugRouteImport } from './routes/api/objekts/list/$collectionSlug'
import { Route as ContainerlinkLinkConnectIndexRouteImport } from './routes/_container/(link)/link/connect.index'
import { Route as ApiObjektsTransfersCollectionSlugSerialRouteImport } from './routes/api/objekts/transfers/$collectionSlug/$serial'
import { Route as ContainerlinkLinkConnectAbstractRouteImport } from './routes/_container/(link)/link/connect.abstract'

const ContainerRoute = ContainerRouteImport.update({
  id: '/_container',
  getParentRoute: () => rootRouteImport,
} as any)
const ContainerIndexRoute = ContainerIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContainerRoute,
} as any)
const ApiOpenAppRoute = ApiOpenAppRouteImport.update({
  id: '/api/open-app',
  path: '/api/open-app',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiLiveSessionsRoute = ApiLiveSessionsRouteImport.update({
  id: '/api/live-sessions',
  path: '/api/live-sessions',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiCollectionRoute = ApiCollectionRouteImport.update({
  id: '/api/collection',
  path: '/api/collection',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiActivityRoute = ApiActivityRouteImport.update({
  id: '/api/activity',
  path: '/api/activity',
  getParentRoute: () => rootRouteImport,
} as any)
const ContainerTermsPrivacyRoute = ContainerTermsPrivacyRouteImport.update({
  id: '/terms-privacy',
  path: '/terms-privacy',
  getParentRoute: () => ContainerRoute,
} as any)
const ContainerLoginRoute = ContainerLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => ContainerRoute,
} as any)
const profileAtChar123nicknameChar125Route =
  profileAtChar123nicknameChar125RouteImport.update({
    id: '/(profile)/@{$nickname}',
    path: '/@{$nickname}',
    getParentRoute: () => rootRouteImport,
  } as any)
const ContainerLiveIndexRoute = ContainerLiveIndexRouteImport.update({
  id: '/live/',
  path: '/live/',
  getParentRoute: () => ContainerRoute,
} as any)
const ContainerListIndexRoute = ContainerListIndexRouteImport.update({
  id: '/list/',
  path: '/list/',
  getParentRoute: () => ContainerRoute,
} as any)
const ContainerActivityIndexRoute = ContainerActivityIndexRouteImport.update({
  id: '/activity/',
  path: '/activity/',
  getParentRoute: () => ContainerRoute,
} as any)
const profileAtChar123nicknameChar125IndexRoute =
  profileAtChar123nicknameChar125IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => profileAtChar123nicknameChar125Route,
  } as any)
const ApiUserSearchRoute = ApiUserSearchRouteImport.update({
  id: '/api/user/search',
  path: '/api/user/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTransfersAddressRoute = ApiTransfersAddressRouteImport.update({
  id: '/api/transfers/$address',
  path: '/api/transfers/$address',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ContainerLiveIdRoute = ContainerLiveIdRouteImport.update({
  id: '/live/$id',
  path: '/live/$id',
  getParentRoute: () => ContainerRoute,
} as any)
const ContainerListSlugRoute = ContainerListSlugRouteImport.update({
  id: '/list/$slug',
  path: '/list/$slug',
  getParentRoute: () => ContainerRoute,
} as any)
const ContainerAuthResetPasswordRoute =
  ContainerAuthResetPasswordRouteImport.update({
    id: '/auth/reset-password',
    path: '/auth/reset-password',
    getParentRoute: () => ContainerRoute,
  } as any)
const ContainerlinkLinkRoute = ContainerlinkLinkRouteImport.update({
  id: '/(link)/link',
  path: '/link',
  getParentRoute: () => ContainerRoute,
} as any)
const profileAtChar123nicknameChar125TradesRoute =
  profileAtChar123nicknameChar125TradesRouteImport.update({
    id: '/trades',
    path: '/trades',
    getParentRoute: () => profileAtChar123nicknameChar125Route,
  } as any)
const profileAtChar123nicknameChar125StatsRoute =
  profileAtChar123nicknameChar125StatsRouteImport.update({
    id: '/stats',
    path: '/stats',
    getParentRoute: () => profileAtChar123nicknameChar125Route,
  } as any)
const profileAtChar123nicknameChar125ProgressRoute =
  profileAtChar123nicknameChar125ProgressRouteImport.update({
    id: '/progress',
    path: '/progress',
    getParentRoute: () => profileAtChar123nicknameChar125Route,
  } as any)
const ContainerlinkLinkIndexRoute = ContainerlinkLinkIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContainerlinkLinkRoute,
} as any)
const ApiObjektsOwnedByAddressRoute =
  ApiObjektsOwnedByAddressRouteImport.update({
    id: '/api/objekts/owned-by/$address',
    path: '/api/objekts/owned-by/$address',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiObjektsMetadataCollectionSlugRoute =
  ApiObjektsMetadataCollectionSlugRouteImport.update({
    id: '/api/objekts/metadata/$collectionSlug',
    path: '/api/objekts/metadata/$collectionSlug',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiObjektsListCollectionSlugRoute =
  ApiObjektsListCollectionSlugRouteImport.update({
    id: '/api/objekts/list/$collectionSlug',
    path: '/api/objekts/list/$collectionSlug',
    getParentRoute: () => rootRouteImport,
  } as any)
const ContainerlinkLinkConnectIndexRoute =
  ContainerlinkLinkConnectIndexRouteImport.update({
    id: '/connect/',
    path: '/connect/',
    getParentRoute: () => ContainerlinkLinkRoute,
  } as any)
const ApiObjektsTransfersCollectionSlugSerialRoute =
  ApiObjektsTransfersCollectionSlugSerialRouteImport.update({
    id: '/api/objekts/transfers/$collectionSlug/$serial',
    path: '/api/objekts/transfers/$collectionSlug/$serial',
    getParentRoute: () => rootRouteImport,
  } as any)
const ContainerlinkLinkConnectAbstractRoute =
  ContainerlinkLinkConnectAbstractRouteImport.update({
    id: '/connect/abstract',
    path: '/connect/abstract',
    getParentRoute: () => ContainerlinkLinkRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/@{$nickname}': typeof profileAtChar123nicknameChar125RouteWithChildren
  '/login': typeof ContainerLoginRoute
  '/terms-privacy': typeof ContainerTermsPrivacyRoute
  '/api/activity': typeof ApiActivityRoute
  '/api/collection': typeof ApiCollectionRoute
  '/api/live-sessions': typeof ApiLiveSessionsRoute
  '/api/open-app': typeof ApiOpenAppRoute
  '/': typeof ContainerIndexRoute
  '/@{$nickname}/progress': typeof profileAtChar123nicknameChar125ProgressRoute
  '/@{$nickname}/stats': typeof profileAtChar123nicknameChar125StatsRoute
  '/@{$nickname}/trades': typeof profileAtChar123nicknameChar125TradesRoute
  '/link': typeof ContainerlinkLinkRouteWithChildren
  '/auth/reset-password': typeof ContainerAuthResetPasswordRoute
  '/list/$slug': typeof ContainerListSlugRoute
  '/live/$id': typeof ContainerLiveIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/api/transfers/$address': typeof ApiTransfersAddressRoute
  '/api/user/search': typeof ApiUserSearchRoute
  '/@{$nickname}/': typeof profileAtChar123nicknameChar125IndexRoute
  '/activity': typeof ContainerActivityIndexRoute
  '/list': typeof ContainerListIndexRoute
  '/live': typeof ContainerLiveIndexRoute
  '/api/objekts/list/$collectionSlug': typeof ApiObjektsListCollectionSlugRoute
  '/api/objekts/metadata/$collectionSlug': typeof ApiObjektsMetadataCollectionSlugRoute
  '/api/objekts/owned-by/$address': typeof ApiObjektsOwnedByAddressRoute
  '/link/': typeof ContainerlinkLinkIndexRoute
  '/link/connect/abstract': typeof ContainerlinkLinkConnectAbstractRoute
  '/api/objekts/transfers/$collectionSlug/$serial': typeof ApiObjektsTransfersCollectionSlugSerialRoute
  '/link/connect': typeof ContainerlinkLinkConnectIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof ContainerLoginRoute
  '/terms-privacy': typeof ContainerTermsPrivacyRoute
  '/api/activity': typeof ApiActivityRoute
  '/api/collection': typeof ApiCollectionRoute
  '/api/live-sessions': typeof ApiLiveSessionsRoute
  '/api/open-app': typeof ApiOpenAppRoute
  '/': typeof ContainerIndexRoute
  '/@{$nickname}/progress': typeof profileAtChar123nicknameChar125ProgressRoute
  '/@{$nickname}/stats': typeof profileAtChar123nicknameChar125StatsRoute
  '/@{$nickname}/trades': typeof profileAtChar123nicknameChar125TradesRoute
  '/auth/reset-password': typeof ContainerAuthResetPasswordRoute
  '/list/$slug': typeof ContainerListSlugRoute
  '/live/$id': typeof ContainerLiveIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/api/transfers/$address': typeof ApiTransfersAddressRoute
  '/api/user/search': typeof ApiUserSearchRoute
  '/@{$nickname}': typeof profileAtChar123nicknameChar125IndexRoute
  '/activity': typeof ContainerActivityIndexRoute
  '/list': typeof ContainerListIndexRoute
  '/live': typeof ContainerLiveIndexRoute
  '/api/objekts/list/$collectionSlug': typeof ApiObjektsListCollectionSlugRoute
  '/api/objekts/metadata/$collectionSlug': typeof ApiObjektsMetadataCollectionSlugRoute
  '/api/objekts/owned-by/$address': typeof ApiObjektsOwnedByAddressRoute
  '/link': typeof ContainerlinkLinkIndexRoute
  '/link/connect/abstract': typeof ContainerlinkLinkConnectAbstractRoute
  '/api/objekts/transfers/$collectionSlug/$serial': typeof ApiObjektsTransfersCollectionSlugSerialRoute
  '/link/connect': typeof ContainerlinkLinkConnectIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_container': typeof ContainerRouteWithChildren
  '/(profile)/@{$nickname}': typeof profileAtChar123nicknameChar125RouteWithChildren
  '/_container/login': typeof ContainerLoginRoute
  '/_container/terms-privacy': typeof ContainerTermsPrivacyRoute
  '/api/activity': typeof ApiActivityRoute
  '/api/collection': typeof ApiCollectionRoute
  '/api/live-sessions': typeof ApiLiveSessionsRoute
  '/api/open-app': typeof ApiOpenAppRoute
  '/_container/': typeof ContainerIndexRoute
  '/(profile)/@{$nickname}/progress': typeof profileAtChar123nicknameChar125ProgressRoute
  '/(profile)/@{$nickname}/stats': typeof profileAtChar123nicknameChar125StatsRoute
  '/(profile)/@{$nickname}/trades': typeof profileAtChar123nicknameChar125TradesRoute
  '/_container/(link)/link': typeof ContainerlinkLinkRouteWithChildren
  '/_container/auth/reset-password': typeof ContainerAuthResetPasswordRoute
  '/_container/list/$slug': typeof ContainerListSlugRoute
  '/_container/live/$id': typeof ContainerLiveIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/api/transfers/$address': typeof ApiTransfersAddressRoute
  '/api/user/search': typeof ApiUserSearchRoute
  '/(profile)/@{$nickname}/': typeof profileAtChar123nicknameChar125IndexRoute
  '/_container/activity/': typeof ContainerActivityIndexRoute
  '/_container/list/': typeof ContainerListIndexRoute
  '/_container/live/': typeof ContainerLiveIndexRoute
  '/api/objekts/list/$collectionSlug': typeof ApiObjektsListCollectionSlugRoute
  '/api/objekts/metadata/$collectionSlug': typeof ApiObjektsMetadataCollectionSlugRoute
  '/api/objekts/owned-by/$address': typeof ApiObjektsOwnedByAddressRoute
  '/_container/(link)/link/': typeof ContainerlinkLinkIndexRoute
  '/_container/(link)/link/connect/abstract': typeof ContainerlinkLinkConnectAbstractRoute
  '/api/objekts/transfers/$collectionSlug/$serial': typeof ApiObjektsTransfersCollectionSlugSerialRoute
  '/_container/(link)/link/connect/': typeof ContainerlinkLinkConnectIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/@{$nickname}'
    | '/login'
    | '/terms-privacy'
    | '/api/activity'
    | '/api/collection'
    | '/api/live-sessions'
    | '/api/open-app'
    | '/'
    | '/@{$nickname}/progress'
    | '/@{$nickname}/stats'
    | '/@{$nickname}/trades'
    | '/link'
    | '/auth/reset-password'
    | '/list/$slug'
    | '/live/$id'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/api/transfers/$address'
    | '/api/user/search'
    | '/@{$nickname}/'
    | '/activity'
    | '/list'
    | '/live'
    | '/api/objekts/list/$collectionSlug'
    | '/api/objekts/metadata/$collectionSlug'
    | '/api/objekts/owned-by/$address'
    | '/link/'
    | '/link/connect/abstract'
    | '/api/objekts/transfers/$collectionSlug/$serial'
    | '/link/connect'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/terms-privacy'
    | '/api/activity'
    | '/api/collection'
    | '/api/live-sessions'
    | '/api/open-app'
    | '/'
    | '/@{$nickname}/progress'
    | '/@{$nickname}/stats'
    | '/@{$nickname}/trades'
    | '/auth/reset-password'
    | '/list/$slug'
    | '/live/$id'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/api/transfers/$address'
    | '/api/user/search'
    | '/@{$nickname}'
    | '/activity'
    | '/list'
    | '/live'
    | '/api/objekts/list/$collectionSlug'
    | '/api/objekts/metadata/$collectionSlug'
    | '/api/objekts/owned-by/$address'
    | '/link'
    | '/link/connect/abstract'
    | '/api/objekts/transfers/$collectionSlug/$serial'
    | '/link/connect'
  id:
    | '__root__'
    | '/_container'
    | '/(profile)/@{$nickname}'
    | '/_container/login'
    | '/_container/terms-privacy'
    | '/api/activity'
    | '/api/collection'
    | '/api/live-sessions'
    | '/api/open-app'
    | '/_container/'
    | '/(profile)/@{$nickname}/progress'
    | '/(profile)/@{$nickname}/stats'
    | '/(profile)/@{$nickname}/trades'
    | '/_container/(link)/link'
    | '/_container/auth/reset-password'
    | '/_container/list/$slug'
    | '/_container/live/$id'
    | '/api/auth/$'
    | '/api/rpc/$'
    | '/api/transfers/$address'
    | '/api/user/search'
    | '/(profile)/@{$nickname}/'
    | '/_container/activity/'
    | '/_container/list/'
    | '/_container/live/'
    | '/api/objekts/list/$collectionSlug'
    | '/api/objekts/metadata/$collectionSlug'
    | '/api/objekts/owned-by/$address'
    | '/_container/(link)/link/'
    | '/_container/(link)/link/connect/abstract'
    | '/api/objekts/transfers/$collectionSlug/$serial'
    | '/_container/(link)/link/connect/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ContainerRoute: typeof ContainerRouteWithChildren
  profileAtChar123nicknameChar125Route: typeof profileAtChar123nicknameChar125RouteWithChildren
  ApiActivityRoute: typeof ApiActivityRoute
  ApiCollectionRoute: typeof ApiCollectionRoute
  ApiLiveSessionsRoute: typeof ApiLiveSessionsRoute
  ApiOpenAppRoute: typeof ApiOpenAppRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  ApiTransfersAddressRoute: typeof ApiTransfersAddressRoute
  ApiUserSearchRoute: typeof ApiUserSearchRoute
  ApiObjektsListCollectionSlugRoute: typeof ApiObjektsListCollectionSlugRoute
  ApiObjektsMetadataCollectionSlugRoute: typeof ApiObjektsMetadataCollectionSlugRoute
  ApiObjektsOwnedByAddressRoute: typeof ApiObjektsOwnedByAddressRoute
  ApiObjektsTransfersCollectionSlugSerialRoute: typeof ApiObjektsTransfersCollectionSlugSerialRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_container': {
      id: '/_container'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContainerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/': {
      id: '/_container/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ContainerIndexRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/api/open-app': {
      id: '/api/open-app'
      path: '/api/open-app'
      fullPath: '/api/open-app'
      preLoaderRoute: typeof ApiOpenAppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/live-sessions': {
      id: '/api/live-sessions'
      path: '/api/live-sessions'
      fullPath: '/api/live-sessions'
      preLoaderRoute: typeof ApiLiveSessionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/collection': {
      id: '/api/collection'
      path: '/api/collection'
      fullPath: '/api/collection'
      preLoaderRoute: typeof ApiCollectionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/activity': {
      id: '/api/activity'
      path: '/api/activity'
      fullPath: '/api/activity'
      preLoaderRoute: typeof ApiActivityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/terms-privacy': {
      id: '/_container/terms-privacy'
      path: '/terms-privacy'
      fullPath: '/terms-privacy'
      preLoaderRoute: typeof ContainerTermsPrivacyRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/login': {
      id: '/_container/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof ContainerLoginRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/(profile)/@{$nickname}': {
      id: '/(profile)/@{$nickname}'
      path: '/@{$nickname}'
      fullPath: '/@{$nickname}'
      preLoaderRoute: typeof profileAtChar123nicknameChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/live/': {
      id: '/_container/live/'
      path: '/live'
      fullPath: '/live'
      preLoaderRoute: typeof ContainerLiveIndexRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/list/': {
      id: '/_container/list/'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof ContainerListIndexRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/activity/': {
      id: '/_container/activity/'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof ContainerActivityIndexRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/(profile)/@{$nickname}/': {
      id: '/(profile)/@{$nickname}/'
      path: '/'
      fullPath: '/@{$nickname}/'
      preLoaderRoute: typeof profileAtChar123nicknameChar125IndexRouteImport
      parentRoute: typeof profileAtChar123nicknameChar125Route
    }
    '/api/user/search': {
      id: '/api/user/search'
      path: '/api/user/search'
      fullPath: '/api/user/search'
      preLoaderRoute: typeof ApiUserSearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/transfers/$address': {
      id: '/api/transfers/$address'
      path: '/api/transfers/$address'
      fullPath: '/api/transfers/$address'
      preLoaderRoute: typeof ApiTransfersAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/live/$id': {
      id: '/_container/live/$id'
      path: '/live/$id'
      fullPath: '/live/$id'
      preLoaderRoute: typeof ContainerLiveIdRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/list/$slug': {
      id: '/_container/list/$slug'
      path: '/list/$slug'
      fullPath: '/list/$slug'
      preLoaderRoute: typeof ContainerListSlugRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/auth/reset-password': {
      id: '/_container/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof ContainerAuthResetPasswordRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/_container/(link)/link': {
      id: '/_container/(link)/link'
      path: '/link'
      fullPath: '/link'
      preLoaderRoute: typeof ContainerlinkLinkRouteImport
      parentRoute: typeof ContainerRoute
    }
    '/(profile)/@{$nickname}/trades': {
      id: '/(profile)/@{$nickname}/trades'
      path: '/trades'
      fullPath: '/@{$nickname}/trades'
      preLoaderRoute: typeof profileAtChar123nicknameChar125TradesRouteImport
      parentRoute: typeof profileAtChar123nicknameChar125Route
    }
    '/(profile)/@{$nickname}/stats': {
      id: '/(profile)/@{$nickname}/stats'
      path: '/stats'
      fullPath: '/@{$nickname}/stats'
      preLoaderRoute: typeof profileAtChar123nicknameChar125StatsRouteImport
      parentRoute: typeof profileAtChar123nicknameChar125Route
    }
    '/(profile)/@{$nickname}/progress': {
      id: '/(profile)/@{$nickname}/progress'
      path: '/progress'
      fullPath: '/@{$nickname}/progress'
      preLoaderRoute: typeof profileAtChar123nicknameChar125ProgressRouteImport
      parentRoute: typeof profileAtChar123nicknameChar125Route
    }
    '/_container/(link)/link/': {
      id: '/_container/(link)/link/'
      path: '/'
      fullPath: '/link/'
      preLoaderRoute: typeof ContainerlinkLinkIndexRouteImport
      parentRoute: typeof ContainerlinkLinkRoute
    }
    '/api/objekts/owned-by/$address': {
      id: '/api/objekts/owned-by/$address'
      path: '/api/objekts/owned-by/$address'
      fullPath: '/api/objekts/owned-by/$address'
      preLoaderRoute: typeof ApiObjektsOwnedByAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/objekts/metadata/$collectionSlug': {
      id: '/api/objekts/metadata/$collectionSlug'
      path: '/api/objekts/metadata/$collectionSlug'
      fullPath: '/api/objekts/metadata/$collectionSlug'
      preLoaderRoute: typeof ApiObjektsMetadataCollectionSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/objekts/list/$collectionSlug': {
      id: '/api/objekts/list/$collectionSlug'
      path: '/api/objekts/list/$collectionSlug'
      fullPath: '/api/objekts/list/$collectionSlug'
      preLoaderRoute: typeof ApiObjektsListCollectionSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/(link)/link/connect/': {
      id: '/_container/(link)/link/connect/'
      path: '/connect'
      fullPath: '/link/connect'
      preLoaderRoute: typeof ContainerlinkLinkConnectIndexRouteImport
      parentRoute: typeof ContainerlinkLinkRoute
    }
    '/api/objekts/transfers/$collectionSlug/$serial': {
      id: '/api/objekts/transfers/$collectionSlug/$serial'
      path: '/api/objekts/transfers/$collectionSlug/$serial'
      fullPath: '/api/objekts/transfers/$collectionSlug/$serial'
      preLoaderRoute: typeof ApiObjektsTransfersCollectionSlugSerialRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_container/(link)/link/connect/abstract': {
      id: '/_container/(link)/link/connect/abstract'
      path: '/connect/abstract'
      fullPath: '/link/connect/abstract'
      preLoaderRoute: typeof ContainerlinkLinkConnectAbstractRouteImport
      parentRoute: typeof ContainerlinkLinkRoute
    }
  }
}

interface ContainerlinkLinkRouteChildren {
  ContainerlinkLinkIndexRoute: typeof ContainerlinkLinkIndexRoute
  ContainerlinkLinkConnectAbstractRoute: typeof ContainerlinkLinkConnectAbstractRoute
  ContainerlinkLinkConnectIndexRoute: typeof ContainerlinkLinkConnectIndexRoute
}

const ContainerlinkLinkRouteChildren: ContainerlinkLinkRouteChildren = {
  ContainerlinkLinkIndexRoute: ContainerlinkLinkIndexRoute,
  ContainerlinkLinkConnectAbstractRoute: ContainerlinkLinkConnectAbstractRoute,
  ContainerlinkLinkConnectIndexRoute: ContainerlinkLinkConnectIndexRoute,
}

const ContainerlinkLinkRouteWithChildren =
  ContainerlinkLinkRoute._addFileChildren(ContainerlinkLinkRouteChildren)

interface ContainerRouteChildren {
  ContainerLoginRoute: typeof ContainerLoginRoute
  ContainerTermsPrivacyRoute: typeof ContainerTermsPrivacyRoute
  ContainerIndexRoute: typeof ContainerIndexRoute
  ContainerlinkLinkRoute: typeof ContainerlinkLinkRouteWithChildren
  ContainerAuthResetPasswordRoute: typeof ContainerAuthResetPasswordRoute
  ContainerListSlugRoute: typeof ContainerListSlugRoute
  ContainerLiveIdRoute: typeof ContainerLiveIdRoute
  ContainerActivityIndexRoute: typeof ContainerActivityIndexRoute
  ContainerListIndexRoute: typeof ContainerListIndexRoute
  ContainerLiveIndexRoute: typeof ContainerLiveIndexRoute
}

const ContainerRouteChildren: ContainerRouteChildren = {
  ContainerLoginRoute: ContainerLoginRoute,
  ContainerTermsPrivacyRoute: ContainerTermsPrivacyRoute,
  ContainerIndexRoute: ContainerIndexRoute,
  ContainerlinkLinkRoute: ContainerlinkLinkRouteWithChildren,
  ContainerAuthResetPasswordRoute: ContainerAuthResetPasswordRoute,
  ContainerListSlugRoute: ContainerListSlugRoute,
  ContainerLiveIdRoute: ContainerLiveIdRoute,
  ContainerActivityIndexRoute: ContainerActivityIndexRoute,
  ContainerListIndexRoute: ContainerListIndexRoute,
  ContainerLiveIndexRoute: ContainerLiveIndexRoute,
}

const ContainerRouteWithChildren = ContainerRoute._addFileChildren(
  ContainerRouteChildren,
)

interface profileAtChar123nicknameChar125RouteChildren {
  profileAtChar123nicknameChar125ProgressRoute: typeof profileAtChar123nicknameChar125ProgressRoute
  profileAtChar123nicknameChar125StatsRoute: typeof profileAtChar123nicknameChar125StatsRoute
  profileAtChar123nicknameChar125TradesRoute: typeof profileAtChar123nicknameChar125TradesRoute
  profileAtChar123nicknameChar125IndexRoute: typeof profileAtChar123nicknameChar125IndexRoute
}

const profileAtChar123nicknameChar125RouteChildren: profileAtChar123nicknameChar125RouteChildren =
  {
    profileAtChar123nicknameChar125ProgressRoute:
      profileAtChar123nicknameChar125ProgressRoute,
    profileAtChar123nicknameChar125StatsRoute:
      profileAtChar123nicknameChar125StatsRoute,
    profileAtChar123nicknameChar125TradesRoute:
      profileAtChar123nicknameChar125TradesRoute,
    profileAtChar123nicknameChar125IndexRoute:
      profileAtChar123nicknameChar125IndexRoute,
  }

const profileAtChar123nicknameChar125RouteWithChildren =
  profileAtChar123nicknameChar125Route._addFileChildren(
    profileAtChar123nicknameChar125RouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  ContainerRoute: ContainerRouteWithChildren,
  profileAtChar123nicknameChar125Route:
    profileAtChar123nicknameChar125RouteWithChildren,
  ApiActivityRoute: ApiActivityRoute,
  ApiCollectionRoute: ApiCollectionRoute,
  ApiLiveSessionsRoute: ApiLiveSessionsRoute,
  ApiOpenAppRoute: ApiOpenAppRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  ApiTransfersAddressRoute: ApiTransfersAddressRoute,
  ApiUserSearchRoute: ApiUserSearchRoute,
  ApiObjektsListCollectionSlugRoute: ApiObjektsListCollectionSlugRoute,
  ApiObjektsMetadataCollectionSlugRoute: ApiObjektsMetadataCollectionSlugRoute,
  ApiObjektsOwnedByAddressRoute: ApiObjektsOwnedByAddressRoute,
  ApiObjektsTransfersCollectionSlugSerialRoute:
    ApiObjektsTransfersCollectionSlugSerialRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
