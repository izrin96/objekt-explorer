services:
  postgres:
    restart: always
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  browserless:
    image: ghcr.io/browserless/chromium
    ports:
      - "9222:3000"
    environment:
      - TOKEN=your-token-here
  web:
    restart: always
    image: ghcr.io/izrin96/objekt-explorer-web:latest
    build:
      args:
        INDEXER_PROXY_KEY: ${INDEXER_PROXY_KEY}
        INDEXER_PROXY_URL: ${INDEXER_PROXY_URL}
        NEXT_PUBLIC_UMAMI_SCRIPT_URL: ${NEXT_PUBLIC_UMAMI_SCRIPT_URL}
        NEXT_PUBLIC_UMAMI_WEBSITE_ID: ${NEXT_PUBLIC_UMAMI_WEBSITE_ID}
        NEXT_PUBLIC_ACTIVITY_WEBSOCKET_URL: ${NEXT_PUBLIC_ACTIVITY_WEBSOCKET_URL}
        BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
        DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
        DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
        TWITTER_CLIENT_ID: ${TWITTER_CLIENT_ID}
        TWITTER_CLIENT_SECRET: ${TWITTER_CLIENT_SECRET}
        BROWSER_CDP_URL: ${BROWSER_CDP_URL}
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
        DATABASE_URL: ${DATABASE_URL}
        S3_ENDPOINT: ${S3_ENDPOINT}
        S3_PORT: ${S3_PORT}
        S3_ACCESS_KEY: ${S3_ACCESS_KEY}
        S3_SECRET_KEY: ${S3_SECRET_KEY}
        S3_USE_SSL: ${S3_USE_SSL}
        SES_REGION: ${SES_REGION}
        SES_ACCESS_KEY: ${SES_ACCESS_KEY}
        SES_SECRET_KEY: ${SES_SECRET_KEY}
        SES_MAIL_FROM: ${SES_MAIL_FROM}
        NEXT_PUBLIC_LIVE_API_KEY: ${NEXT_PUBLIC_LIVE_API_KEY}
        COSMO_SHOP_RECAPTCHA_KEY: ${COSMO_SHOP_RECAPTCHA_KEY}
        BYPASS_LIVE_KEY: ${BYPASS_LIVE_KEY}
        UPSTASH_REDIS_REST_URL: ${UPSTASH_REDIS_REST_URL}
        UPSTASH_REDIS_REST_TOKEN: ${UPSTASH_REDIS_REST_TOKEN}
    expose:
      - 3000
    environment:
      - NODE_ENV=production
      - INDEXER_PROXY_KEY
      - INDEXER_PROXY_URL
      - NEXT_PUBLIC_UMAMI_SCRIPT_URL
      - NEXT_PUBLIC_UMAMI_WEBSITE_ID
      - NEXT_PUBLIC_ACTIVITY_WEBSOCKET_URL
      - BETTER_AUTH_SECRET
      - DISCORD_CLIENT_ID
      - DISCORD_CLIENT_SECRET
      - TWITTER_CLIENT_ID
      - TWITTER_CLIENT_SECRET
      - BROWSER_CDP_URL
      - NEXT_PUBLIC_SITE_URL
      - DATABASE_URL
      - S3_ENDPOINT
      - S3_PORT
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_USE_SSL
      - SES_REGION
      - SES_ACCESS_KEY
      - SES_SECRET_KEY
      - SES_MAIL_FROM
      - NEXT_PUBLIC_LIVE_API_KEY
      - COSMO_SHOP_RECAPTCHA_KEY
      - BYPASS_LIVE_KEY
      - UPSTASH_REDIS_REST_URL
      - UPSTASH_REDIS_REST_TOKEN
  minio:
    restart: always
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
  pgbouncer:
    image: edoburu/pgbouncer:latest
    restart: always
    depends_on:
      - postgres
    ports:
      - "6432:6432"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_NAME=main
      - POOL_MODE=transaction
      - AUTH_TYPE=scram-sha-256
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost"]
volumes:
  db_data:
  minio_data:
